from django.db import models
from django.utils.timezone import now


class Category(models.Model):
    name = models.CharField(max_length=100, unique=True, verbose_name="–ù–∞–∑–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó")
    icon = models.CharField(max_length=10, default="üì¶", verbose_name="–Ü–∫–æ–Ω–∫–∞")
    is_default = models.BooleanField(default=False, verbose_name="–ë–∞–∑–æ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è")
    is_income = models.BooleanField(default=False, verbose_name="–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø—Ä–∏–±—É—Ç–∫—É")
    created_at = models.DateTimeField(auto_now_add=True, verbose_name="–°—Ç–≤–æ—Ä–µ–Ω–æ")

    class Meta:
        verbose_name = "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è"
        verbose_name_plural = "–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó"
        ordering = ['name']

    def __str__(self):
        return f"{self.icon} {self.name}"

    def delete(self, *args, **kwargs):
        if self.is_default:
            raise models.ProtectedError(
                "–ù–µ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –±–∞–∑–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é",
                self
            )
        super().delete(*args, **kwargs)


class Transaction(models.Model):
    TRANSACTION_TYPES = [
        ('expense', '–í–∏—Ç—Ä–∞—Ç–∞'),
        ('income', '–ü—Ä–∏–±—É—Ç–æ–∫'),
    ]

    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞")
    price = models.DecimalField(max_digits=10, decimal_places=2, verbose_name="–°—É–º–∞")
    category = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True, verbose_name="–ö–∞—Ç–µ–≥–æ—Ä—ñ—è")
    transaction_type = models.CharField(max_length=10, choices=TRANSACTION_TYPES, default='expense', verbose_name="–¢–∏–ø")
    created_at = models.DateTimeField(default=now, verbose_name="–°—Ç–≤–æ—Ä–µ–Ω–æ")  # –ó–º—ñ–Ω–µ–Ω–æ –∑ auto_now_add –Ω–∞ default

    class Meta:
        verbose_name = "–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è"
        verbose_name_plural = "–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó"
        ordering = ['-created_at']

    def __str__(self):
        return f"{self.name} - {self.price} –≥—Ä–Ω ({self.get_transaction_type_display()})"

    def __getitem__(self, key):
        """Allow bracket notation access to model fields"""
        return getattr(self, key)